###############################################
# Project Requirements (Polished / Curated)
# Optical Simulation of Plasmonic Solar Cell
#
# This list has been MINIMIZED to match the actual
# imports used in the current Jupyter notebooks:
#   meep-example01.ipynb
#   meep-example02.ipynb
#   meep-example03.ipynb
#   meep-example-resonant-cavity.ipynb
#
# If you later add data handling, ML, or optimization
# features, move those packages into separate optional
# requirement files (see templates below).
###############################################

########## CORE RUNTIME ##########
# Finite-Difference Time-Domain (FDTD) engine.
# Strongly recommended to install via conda-forge due to compiled deps (MPI, HDF5):
#   conda create -n plasmonic -c conda-forge meep=1.28 numpy matplotlib h5py ipython jupyterlab
# NOTE: "pip install meep" on Windows often fails; prefer Conda or WSL.
meep>=1.28,<2.0

# Numerical arrays used throughout simulations.
numpy>=1.24,<2.0

# Plotting & animation of field distributions.
matplotlib>=3.7,<4.0

# HDF5 I/O (Meep outputs field data as .h5 files.)
h5py>=3.9,<4.0

########## INTERACTIVE / NOTEBOOK ##########
# Provides IPython shell features & display utilities (e.g., Video) used in notebooks.
ipython>=8.15,<9.0
# Jupyter front-end (classic or Lab). Install one; jupyterlab recommended.
jupyterlab>=4.0,<5.0

########## OPTIONAL EXTRAS (UNUSED CURRENTLY) ##########
# The following groups are commented out because they are *not* imported in the existing notebooks.
# Uncomment (or move to separate files like requirements-ml.txt / requirements-opt.txt) when needed.

## --- Scientific / Analysis ---
# pandas>=2.1.0
# scipy>=1.11.0

## --- Visualization (Extended) ---
# seaborn>=0.13.0
# plotly>=5.17.0

## --- Machine Learning / Models ---
# torch>=2.1.0
# torchvision>=0.16.0
# scikit-learn>=1.3.0

## --- Optimization / Solvers ---
# ipopt>=1.13.0
# nlopt>=2.7.0

## --- Data Formats / Excel ---
# openpyxl>=3.1.0

## --- Performance Utilities ---
# numba>=0.58.0
# cython>=3.0.0
# joblib>=1.3.0
# tqdm>=4.66.0
# pyyaml>=6.0.0

########## DEV / QA (OPTIONAL) ##########
# For testing: place into requirements-dev.txt if adopting multi-file strategy.
# pytest>=7.4.0
# pytest-cov>=4.1.0

########## DOCS (OPTIONAL) ##########
# sphinx>=7.2.0
# sphinx-rtd-theme>=1.3.0

###############################################
# HOW TO EXTEND
# 1. Keep this file lean: only packages required at runtime.
# 2. Add extras in separate files:
#       requirements-ml.txt, requirements-dev.txt, requirements-docs.txt
# 3. Use pinned upper bounds (<) to reduce surprise breakages while allowing patch updates.
# 4. Regenerate a lock file (pip-tools / conda env export) for reproducibility in production.
###############################################

###############################################
# TEMPLATES (UNCOMMENT & PLACE IN NEW FILES)  #
###############################################
# Example: requirements-dev.txt
#   -r requirements.txt
#   pytest>=7.4.0,<8.0
#   pytest-cov>=4.1.0,<5.0
#
# Example: requirements-ml.txt
#   -r requirements.txt
#   torch>=2.1.0,<2.2
#   torchvision>=0.16.0,<0.17
#   scikit-learn>=1.3.0,<1.4
#
# Example: requirements-opt.txt
#   -r requirements.txt
#   ipopt>=1.13.0,<1.14
#   nlopt>=2.7.0,<2.8
###############################################
